apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: lamp-pipeline
spec:
  description: |
    This pipeline clones the LAMP application repository, builds the container image,
    updates the Kubernetes manifests, and triggers ArgoCD to sync the application.
  workspaces:
    - name: shared-workspace
  params:
  - name: git-url
    type: string
    description: URL of the git repo
    default: https://github.com/rh-joanders/msu.git
  - name: git-revision
    type: string
    description: Git revision to build
    default: HEAD
  - name: image-name
    type: string
    description: Name of the image to build
    default: lamp-app
  - name: image-tag
    type: string
    description: Tag of the image to build
    default: "dev"
  - name: add-latest-tag
    type: string
    description: Additional tag (latest) for the image
    default: "TRUE" 
  - name: deployment-path
    type: string
    description: Path to the kustomization.yaml file to update
    default: "manifests/overlays/lamp-dev/kustomization.yaml"
  - name: app-name
    type: string
    description: Name of the ArgoCD application to sync
    default: "lamp-dev"
  - name: deployment-namespace
    type: string
    description: Namespace to deploy to
    default: "lamp-dev"
  tasks:
  - name: fetch-repository
    taskRef:
      params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
      resolver: cluster
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: URL
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"

  - name: build-image
    taskRef:
      params:
        - name: kind
          value: task
        - name: name
          value: buildah
        - name: namespace
          value: openshift-pipelines
      resolver: cluster
    runAfter:
    - fetch-repository
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.image-name):$(params.image-tag)
    - name: CONTEXT
      value: application
    - name: DOCKERFILE
      value: Dockerfile
    - name: ADDITIONAL_TAGS
      value: $(params.add-latest-tag)

  - name: update-manifests
    taskRef:
      name: update-deployment
      kind: Task
    runAfter:
    - build-image
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: image-name
      value: image-registry.openshift-image-registry.svc:5000/$(params.deployment-namespace)/$(params.image-name)
    - name: image-tag
      value: $(params.image-tag)
    - name: deployment-path
      value: $(params.deployment-path)

  - name: sync-application
    taskRef:
      name: argocd-task-sync-and-wait
      kind: Task
    runAfter:
    - update-manifests
    params:
    - name: application-name
      value: $(params.app-name)
    - name: flags
      value: --insecure