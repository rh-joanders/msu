apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: lamp-pipeline
  namespace: $NAMESPACE
spec:
  description: |
    This pipeline clones the LAMP application repository, builds the container image,
    updates the Kubernetes manifests, and triggers ArgoCD to sync the application.
  workspaces:
  - name: shared-workspace  # Workspace for sharing data between tasks
  params:
  - name: git-url
    type: string
    description: URL of the git repo
  - name: git-revision
    type: string
    description: Git revision to build
    default: main
  - name: image-name
    type: string
    description: Name of the image to build
  - name: image-tag
    type: string
    description: Tag of the image to build
    default: $IMAGE_TAG
  - name: add-latest-tag
    type: string
    description: Whether to also tag the image as 'latest'
    default: ""
  - name: deployment-path
    type: string
    description: Path to kustomization.yaml
    default: manifests/overlays/$NAMESPACE/kustomization.yaml
  tasks:
  # Task 1: Clone the git repository
  - name: fetch-repository
    taskRef:
      params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
      resolver: cluster
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: URL
      value: \$(params.git-url)
    - name: revision
      value: \$(params.git-revision)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"

  # Task 2: Build and push the container image
  - name: build-image
    taskRef:
      params:
        - name: kind
          value: task
        - name: name
          value: buildah
        - name: namespace
          value: openshift-pipelines
      resolver: cluster
    runAfter:
    - fetch-repository  # Must run after git clone
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: IMAGE
      value: \$(params.image-name):\$(params.image-tag)
    - name: CONTEXT
      value: application  # Directory containing Dockerfile
    - name: DOCKERFILE
      value: Dockerfile
    - name: ADDITIONAL_TAGS
      value: \$(params.add-latest-tag)  # Add latest tag if requested

  # Task 3: Update the deployment manifests with the new image
  - name: update-manifests
    taskRef:
      name: update-deployment  # Custom task defined above
      kind: Task
    runAfter:
    - build-image  # Must run after image build
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: image-name
      value: \$(params.image-name)
    - name: image-tag
      value: \$(params.image-tag)
    - name: deployment-path
      value: \$(params.deployment-path)

  # Task 4: Trigger ArgoCD to sync the application
  - name: sync-application
    taskRef:
      name: argocd-task-sync-and-wait  # From Tekton catalog
      kind: Task
    runAfter:
    - update-manifests  # Must run after manifest update
    params:
    - name: application-name
      value: $APP_NAME
    - name: flags
#      value: --insecure  # Use if ArgoCD is not using TLS certificates